print "**************************************************************"
print "*********************** Process Test *************************"
print "**************************************************************"

use test

delete ${process:"ECB_FX_TEST":*}
processes = find ${process}
assertEquals(0, processes.size)

print "Create a process"
process = Process()
process.service = "ETL"
process.name = "ECB_FX_TEST"
process.description = "TEST ETL Process for ECB_TEST"
process.enabled = true
process.input.url="https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"
process.input.tx = "#ECB_FX"
process.workflow="#wf_xml_data_loader"
process.cron = "38 07 ? * * *"
save ${process:process}

print "Checking there is only 1 process"
processes = find ${process}
assertEquals(1, processes.size)

print "Change the time"
process.cron = "00 12 ? * * *"
save ${process:process}

print "Checking there is only 1 process"
processes = find ${process}
assertEquals(1, processes.size)

print "Checking process info"
ptest = ${process:"ECB_FX_TEST"}
assertEquals(2, ptest.version.version)
assertEquals("00 12 ? * * *", ptest.cron)

print "Tag version 1"
tag ${process:"ECB_FX_TEST":1} as PROD

print "Checking process info"
ptest = ${process:"ECB_FX_TEST":PROD}
assertEquals(1, ptest.version.version)
assertEquals("38 07 ? * * *", ptest.cron)

print "Rollback to previous version"
delete ${process:"ECB_FX_TEST"}

print "Checking there is only 1 process"
processes = find ${process}
assertEquals(1, processes.size)

print "Checking process info"
ptest = ${process:"ECB_FX_TEST"}
assertEquals(1, ptest.version.version)
assertEquals("38 07 ? * * *", ptest.cron)

print "Change the time"
process.cron = "00 12 ? * * *"
save ${process:process}

print "Completely remove process"
delete ${process:"ECB_FX_TEST":*}
processes = find ${process}
print "Checking there are no processes"
assertEquals(0, processes.size)
