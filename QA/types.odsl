print "**************************************************************"
print "*********************** Type Test ****************************"
print "**************************************************************"

use test

// Completely delete type
delete ${type:"Person":*}

Person = type
    first as Scalar()
    last as Scalar()
    dob as Date()
    name as first + " " + last
    named as function(salutation)
        named = salutation + " " + first + " " + last
    end
end

colin = object as Person
    first = "Colin"
    last = "Hartley"
    dob = "1965-03-10"
end

name = colin.name
named = colin.named("Sir")
assertEquals("Colin Hartley", name)
assertEquals("Sir Colin Hartley", named)
assertType(colin, "Person")
assertHasProperty(colin, "name")

print ">>> Testing saving type"
save ${type:Person} log "New person type created"

types = find ${type}
// assertEquals(1, types.size)

Person = type
    first as Scalar()
    last as Scalar()
    dob as Date()
    email as String()
    name as first + " " + last
    named as function(salutation)
        named = salutation + " " + first + " " + last
    end
end

save ${type:Person} log "Added email address"
test = ${type:"Person"}
assertEquals(2, test.version.version)

Person = type
    first as Scalar()
    last as Scalar()
    dob as Date()
    trace as String()
    name as first + " " + last
    named as function(salutation)
        named = salutation + " " + first + " " + last
    end
end

save ${type:Person} log "Removed email address, added trace"
test = ${type:"Person"}
assertEquals(3, test.version.version)

delete ${type:"Person"} log "Rolled back to version 2"
test = ${type:"Person"}
assertEquals(2, test.version.version)

print "> Constraints"
address = type
    name as String()
    zip as String() not null
    hl as String() not null
    ts as Timeseries()
    dur as Duration()
    category as Dimension(date)
    constraint zip_value check mark (zip matches "^\d{5}(-\d{4})?$")
    constraint hl_value check mark (hl in ["high","low"])
    constraint zip_index unique (zip,hl)
end
save ${type:address}

adread = ${type:"address"}
print adread

walkfares = object as address
    zip = "50210d"
    hl = "hello"
end

walkfares.category = "2022-09-01"
walkfares.checkConstraints()
print walkfares
