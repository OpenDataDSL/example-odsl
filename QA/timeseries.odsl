print "**************************************************************"
print "*********************** TimeSeries Test **********************"
print "**************************************************************"

ts = TimeSeries("sparse")

// Add initial data
ts.add("2020-10-01T00:10:00", 12.5)
ts.add("2020-10-01T00:20:00", 12.6)
print json(ts)
assertEquals(12.5, ts["2020-10-01T00:10:00"])
assertEquals(12.6, ts["2020-10-01T00:20:00"])
assertEquals(12.5, ts[0])
assertEquals(12.6, ts[1])

// Test adding before start
ts.add("2020-10-01T00:00:00", 9.0)
print json(ts)
assertEquals(9.0, ts["2020-10-01T00:00:00"])
assertEquals(12.5, ts["2020-10-01T00:10:00"])
assertEquals(12.6, ts["2020-10-01T00:20:00"])
assertEquals(9.0, ts[0])
assertEquals(12.5, ts[1])
assertEquals(12.6, ts[2])

// Test adding after end
ts.add("2020-10-18T01:00:00", 15.0)
print json(ts)
assertEquals(9.0, ts["2020-10-01T00:00:00"])
assertEquals(12.5, ts["2020-10-01T00:10:00"])
assertEquals(12.6, ts["2020-10-01T00:20:00"])
assertEquals(15.0, ts["2020-10-18T01:00:00"])
assertEquals(9.0, ts[0])
assertEquals(12.5, ts[1])
assertEquals(12.6, ts[2])
assertEquals(15.0, ts[3])

// Test adding in the middle
ts.add("2020-10-01T01:00:00", 12.0)
print json(ts)
assertEquals(9.0, ts["2020-10-01T00:00:00"])
assertEquals(12.5, ts["2020-10-01T00:10:00"])
assertEquals(12.6, ts["2020-10-01T00:20:00"])
assertEquals(12.0, ts["2020-10-01T01:00:00"])
assertEquals(15.0, ts["2020-10-18T01:00:00"])
assertEquals(9.0, ts[0])
assertEquals(12.5, ts[1])
assertEquals(12.6, ts[2])
assertEquals(12.0, ts[3])
assertEquals(15.0, ts[4])
