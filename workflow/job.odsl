xml_data_loader = workflow in "data-loaders"
    // Extract the FX XML file from ECB, transform it and load it to the HUB
    in url as Scalar
    in tx as Scalar
    out batch as Batch

    WF_START
        "ok" -> getxml
    end

    phase "EXTRACT"
        WF_ACTION getxml ai
            "ok" -> transformxml
            "failed" -> stopfailed
            ai.url = input.url
            result = ${action:private/"xml_url"}.run(ai, output)    

        end
    end

    phase "TRANSFORM"
        WF_ACTION transformxml ai
            "ok" -> sendbatch
            "failed" -> stopfailed
            ai.data = output.xml_url.xml
            ai.tx = input.tx
            result = ${action:private/"transform_data"}.run(ai, output)
        end
    end

    phase "SEND"
        WF_ACTION sendbatch ai
            "ok" -> stopok
            "failed" -> stopfailed
            ai.batch = output.transform_data.batch
            result = ${action:private/"send_batch"}.run(ai, output)
        end
    end

    WF_EVENT stopok as "success"
        return "ok"
    end
    WF_EVENT stopfailed as "failed"
        return "failed"
    end

end
save ${workflow:private/xml_data_loader}

job_input = Object()
job_input.url = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"
job_input.tx = "ECB_FX"
job_output = Object()
xml_data_loader.run(job_input, job_output)
print json(job_output.transform_data.batch)

process = Process()
process.service = "ETL"
process.name = "ECB_FX_WORKFLOW"
process.description = "ETL Process for ECB_FX"
process.enabled = true
process.runAs = "hartco1003@googlemail.com"
process.workflow = "public/xml_data_loader"
process.input.url = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"
process.input.tx = "ECB_FX"
process.cron = "0 17 ? * MON,TUE,WED,THU,FRI *"
print json(process)
//save ${process:process}