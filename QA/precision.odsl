print "**************************************************************"
print "*********************** Precision Test ***********************"
print "**************************************************************"

set precision 3
set rounding up
print 1 / 3

a=0.1
b=3
c=a*b
print b
assertEquals("3", b)

print c
assertEquals("0.300000", c)

set precision 3
print c
assertEquals("0.300", c)

set precision 0
set rounding up
print c
assertEquals("1", c)

set precision 17
print c
assertEquals("0.30000000000000000", c)


set precision 3
set rounding up
print 1 / 3
print 2 / 3
set rounding down
print 1 / 3
print 2 / 3
set rounding ceiling
print 1 / 3
print 2 / 3
set rounding floor
print 1 / 3
print 2 / 3
set rounding half_up
print 1 / 3
print 2 / 3
set rounding half_down
print 1 / 3
print 2 / 3
set rounding half_even
print 1 / 3
print 2 / 3

// Documentation example
set precision 1
values = [5.5, 2.5, 1.6, 1.1, 1.0, -1.0, -1.1, -1.6, -2.5, -5.5]
up = [6,3,2,2,1,-1,-2,-2,-3,-6]
down = [5,2,1,1,1,-1,-1,-1,-2,-5]
ceiling = [6,3,2,2,1,-1,-1,-1,-2,-5]
floor = [5,2,1,1,1,-1,-2,-2,-3,-6]
half_up = [6,3,2,1,1,-1,-1,-2,-3,-6]
half_down = [5,2,2,1,1,-1,-1,-2,-2,-5]
half_even = [6,2,2,1,1,-1,-1,-2,-2,-6]

set precision 0
for i=0 to 9
    set rounding up
    assertEquals(up[i], values[i])
    set rounding down
    assertEquals(down[i], values[i])
    set rounding ceiling
    assertEquals(ceiling[i], values[i])
    set rounding floor
    assertEquals(floor[i], values[i])
    set rounding half_up
    assertEquals(half_up[i], values[i])
    set rounding half_down
    assertEquals(half_down[i], values[i])
    set rounding half_even
    assertEquals(half_even[i], values[i])
next


